# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LearnerMentorship(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, mentor_type: str=None, mentor_id: int=None, mentor_name: str=None):  # noqa: E501
        """LearnerMentorship - a model defined in Swagger

        :param mentor_type: The mentor_type of this LearnerMentorship.  # noqa: E501
        :type mentor_type: str
        :param mentor_id: The mentor_id of this LearnerMentorship.  # noqa: E501
        :type mentor_id: int
        :param mentor_name: The mentor_name of this LearnerMentorship.  # noqa: E501
        :type mentor_name: str
        """
        self.swagger_types = {
            'mentor_type': str,
            'mentor_id': int,
            'mentor_name': str
        }

        self.attribute_map = {
            'mentor_type': 'mentorType',
            'mentor_id': 'mentorID',
            'mentor_name': 'mentorName'
        }

        self._mentor_type = mentor_type
        self._mentor_id = mentor_id
        self._mentor_name = mentor_name

    @classmethod
    def from_dict(cls, dikt) -> 'LearnerMentorship':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Learner_mentorship of this LearnerMentorship.  # noqa: E501
        :rtype: LearnerMentorship
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mentor_type(self) -> str:
        """Gets the mentor_type of this LearnerMentorship.

        导师类型,  分有负责导师mentorResponsible,协同导师mentorSupportive, 家校沟通导师mentorCommunicative)  # noqa: E501

        :return: The mentor_type of this LearnerMentorship.
        :rtype: str
        """
        return self._mentor_type

    @mentor_type.setter
    def mentor_type(self, mentor_type: str):
        """Sets the mentor_type of this LearnerMentorship.

        导师类型,  分有负责导师mentorResponsible,协同导师mentorSupportive, 家校沟通导师mentorCommunicative)  # noqa: E501

        :param mentor_type: The mentor_type of this LearnerMentorship.
        :type mentor_type: str
        """

        self._mentor_type = mentor_type

    @property
    def mentor_id(self) -> int:
        """Gets the mentor_id of this LearnerMentorship.

        导师ID  # noqa: E501

        :return: The mentor_id of this LearnerMentorship.
        :rtype: int
        """
        return self._mentor_id

    @mentor_id.setter
    def mentor_id(self, mentor_id: int):
        """Sets the mentor_id of this LearnerMentorship.

        导师ID  # noqa: E501

        :param mentor_id: The mentor_id of this LearnerMentorship.
        :type mentor_id: int
        """

        self._mentor_id = mentor_id

    @property
    def mentor_name(self) -> str:
        """Gets the mentor_name of this LearnerMentorship.

        导师名称  # noqa: E501

        :return: The mentor_name of this LearnerMentorship.
        :rtype: str
        """
        return self._mentor_name

    @mentor_name.setter
    def mentor_name(self, mentor_name: str):
        """Sets the mentor_name of this LearnerMentorship.

        导师名称  # noqa: E501

        :param mentor_name: The mentor_name of this LearnerMentorship.
        :type mentor_name: str
        """

        self._mentor_name = mentor_name
