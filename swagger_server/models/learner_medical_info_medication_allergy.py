# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LearnerMedicalInfoMedicationAllergy(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, antibiotics_allergy: bool=None, sulfonamides_allergy: bool=None, painkiller_allergy: bool=None, anesthetic_allergy: bool=None, vaccine_allergy: bool=None, other_medication_allergy: List[str]=None):  # noqa: E501
        """LearnerMedicalInfoMedicationAllergy - a model defined in Swagger

        :param antibiotics_allergy: The antibiotics_allergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :type antibiotics_allergy: bool
        :param sulfonamides_allergy: The sulfonamides_allergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :type sulfonamides_allergy: bool
        :param painkiller_allergy: The painkiller_allergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :type painkiller_allergy: bool
        :param anesthetic_allergy: The anesthetic_allergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :type anesthetic_allergy: bool
        :param vaccine_allergy: The vaccine_allergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :type vaccine_allergy: bool
        :param other_medication_allergy: The other_medication_allergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :type other_medication_allergy: List[str]
        """
        self.swagger_types = {
            'antibiotics_allergy': bool,
            'sulfonamides_allergy': bool,
            'painkiller_allergy': bool,
            'anesthetic_allergy': bool,
            'vaccine_allergy': bool,
            'other_medication_allergy': List[str]
        }

        self.attribute_map = {
            'antibiotics_allergy': 'antibioticsAllergy',
            'sulfonamides_allergy': 'sulfonamidesAllergy',
            'painkiller_allergy': 'painkillerAllergy',
            'anesthetic_allergy': 'anestheticAllergy',
            'vaccine_allergy': 'vaccineAllergy',
            'other_medication_allergy': 'otherMedicationAllergy'
        }

        self._antibiotics_allergy = antibiotics_allergy
        self._sulfonamides_allergy = sulfonamides_allergy
        self._painkiller_allergy = painkiller_allergy
        self._anesthetic_allergy = anesthetic_allergy
        self._vaccine_allergy = vaccine_allergy
        self._other_medication_allergy = other_medication_allergy

    @classmethod
    def from_dict(cls, dikt) -> 'LearnerMedicalInfoMedicationAllergy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Learner_medicalInfo_medicationAllergy of this LearnerMedicalInfoMedicationAllergy.  # noqa: E501
        :rtype: LearnerMedicalInfoMedicationAllergy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def antibiotics_allergy(self) -> bool:
        """Gets the antibiotics_allergy of this LearnerMedicalInfoMedicationAllergy.

        抗生素过敏（青霉素、氨基苄青霉素、链霉素、卡那霉素）  # noqa: E501

        :return: The antibiotics_allergy of this LearnerMedicalInfoMedicationAllergy.
        :rtype: bool
        """
        return self._antibiotics_allergy

    @antibiotics_allergy.setter
    def antibiotics_allergy(self, antibiotics_allergy: bool):
        """Sets the antibiotics_allergy of this LearnerMedicalInfoMedicationAllergy.

        抗生素过敏（青霉素、氨基苄青霉素、链霉素、卡那霉素）  # noqa: E501

        :param antibiotics_allergy: The antibiotics_allergy of this LearnerMedicalInfoMedicationAllergy.
        :type antibiotics_allergy: bool
        """

        self._antibiotics_allergy = antibiotics_allergy

    @property
    def sulfonamides_allergy(self) -> bool:
        """Gets the sulfonamides_allergy of this LearnerMedicalInfoMedicationAllergy.

        磺胺类药物过敏（磺胺噻唑、磺胺嘧啶、长效磺胺、复方新诺明等）  # noqa: E501

        :return: The sulfonamides_allergy of this LearnerMedicalInfoMedicationAllergy.
        :rtype: bool
        """
        return self._sulfonamides_allergy

    @sulfonamides_allergy.setter
    def sulfonamides_allergy(self, sulfonamides_allergy: bool):
        """Sets the sulfonamides_allergy of this LearnerMedicalInfoMedicationAllergy.

        磺胺类药物过敏（磺胺噻唑、磺胺嘧啶、长效磺胺、复方新诺明等）  # noqa: E501

        :param sulfonamides_allergy: The sulfonamides_allergy of this LearnerMedicalInfoMedicationAllergy.
        :type sulfonamides_allergy: bool
        """

        self._sulfonamides_allergy = sulfonamides_allergy

    @property
    def painkiller_allergy(self) -> bool:
        """Gets the painkiller_allergy of this LearnerMedicalInfoMedicationAllergy.

        解热镇痛药（阿司匹林、去痛片）  # noqa: E501

        :return: The painkiller_allergy of this LearnerMedicalInfoMedicationAllergy.
        :rtype: bool
        """
        return self._painkiller_allergy

    @painkiller_allergy.setter
    def painkiller_allergy(self, painkiller_allergy: bool):
        """Sets the painkiller_allergy of this LearnerMedicalInfoMedicationAllergy.

        解热镇痛药（阿司匹林、去痛片）  # noqa: E501

        :param painkiller_allergy: The painkiller_allergy of this LearnerMedicalInfoMedicationAllergy.
        :type painkiller_allergy: bool
        """

        self._painkiller_allergy = painkiller_allergy

    @property
    def anesthetic_allergy(self) -> bool:
        """Gets the anesthetic_allergy of this LearnerMedicalInfoMedicationAllergy.

        麻醉用药（普鲁卡因）  # noqa: E501

        :return: The anesthetic_allergy of this LearnerMedicalInfoMedicationAllergy.
        :rtype: bool
        """
        return self._anesthetic_allergy

    @anesthetic_allergy.setter
    def anesthetic_allergy(self, anesthetic_allergy: bool):
        """Sets the anesthetic_allergy of this LearnerMedicalInfoMedicationAllergy.

        麻醉用药（普鲁卡因）  # noqa: E501

        :param anesthetic_allergy: The anesthetic_allergy of this LearnerMedicalInfoMedicationAllergy.
        :type anesthetic_allergy: bool
        """

        self._anesthetic_allergy = anesthetic_allergy

    @property
    def vaccine_allergy(self) -> bool:
        """Gets the vaccine_allergy of this LearnerMedicalInfoMedicationAllergy.

        疫苗类药物  # noqa: E501

        :return: The vaccine_allergy of this LearnerMedicalInfoMedicationAllergy.
        :rtype: bool
        """
        return self._vaccine_allergy

    @vaccine_allergy.setter
    def vaccine_allergy(self, vaccine_allergy: bool):
        """Sets the vaccine_allergy of this LearnerMedicalInfoMedicationAllergy.

        疫苗类药物  # noqa: E501

        :param vaccine_allergy: The vaccine_allergy of this LearnerMedicalInfoMedicationAllergy.
        :type vaccine_allergy: bool
        """

        self._vaccine_allergy = vaccine_allergy

    @property
    def other_medication_allergy(self) -> List[str]:
        """Gets the other_medication_allergy of this LearnerMedicalInfoMedicationAllergy.

        其他药物过敏  # noqa: E501

        :return: The other_medication_allergy of this LearnerMedicalInfoMedicationAllergy.
        :rtype: List[str]
        """
        return self._other_medication_allergy

    @other_medication_allergy.setter
    def other_medication_allergy(self, other_medication_allergy: List[str]):
        """Sets the other_medication_allergy of this LearnerMedicalInfoMedicationAllergy.

        其他药物过敏  # noqa: E501

        :param other_medication_allergy: The other_medication_allergy of this LearnerMedicalInfoMedicationAllergy.
        :type other_medication_allergy: List[str]
        """

        self._other_medication_allergy = other_medication_allergy
