# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.course_instructions import CourseInstructions  # noqa: F401,E501
from swagger_server import util


class Course(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, created_time: str=None, created_by_id: int=None, created_by: int=None, credit_hour: float=None, course_time_shift: str=None, course_length_in_weeks: int=None, form_and_evaluation: str=None, goal_ofcourse: str=None, objectives_of_instruction: str=None, plan_of_instruction: str=None, miscellaneous_note: str=None, instructions: List[CourseInstructions]=None):  # noqa: E501
        """Course - a model defined in Swagger

        :param id: The id of this Course.  # noqa: E501
        :type id: int
        :param name: The name of this Course.  # noqa: E501
        :type name: str
        :param created_time: The created_time of this Course.  # noqa: E501
        :type created_time: str
        :param created_by_id: The created_by_id of this Course.  # noqa: E501
        :type created_by_id: int
        :param created_by: The created_by of this Course.  # noqa: E501
        :type created_by: int
        :param credit_hour: The credit_hour of this Course.  # noqa: E501
        :type credit_hour: float
        :param course_time_shift: The course_time_shift of this Course.  # noqa: E501
        :type course_time_shift: str
        :param course_length_in_weeks: The course_length_in_weeks of this Course.  # noqa: E501
        :type course_length_in_weeks: int
        :param form_and_evaluation: The form_and_evaluation of this Course.  # noqa: E501
        :type form_and_evaluation: str
        :param goal_ofcourse: The goal_ofcourse of this Course.  # noqa: E501
        :type goal_ofcourse: str
        :param objectives_of_instruction: The objectives_of_instruction of this Course.  # noqa: E501
        :type objectives_of_instruction: str
        :param plan_of_instruction: The plan_of_instruction of this Course.  # noqa: E501
        :type plan_of_instruction: str
        :param miscellaneous_note: The miscellaneous_note of this Course.  # noqa: E501
        :type miscellaneous_note: str
        :param instructions: The instructions of this Course.  # noqa: E501
        :type instructions: List[CourseInstructions]
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'created_time': str,
            'created_by_id': int,
            'created_by': int,
            'credit_hour': float,
            'course_time_shift': str,
            'course_length_in_weeks': int,
            'form_and_evaluation': str,
            'goal_ofcourse': str,
            'objectives_of_instruction': str,
            'plan_of_instruction': str,
            'miscellaneous_note': str,
            'instructions': List[CourseInstructions]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'created_time': 'createdTime',
            'created_by_id': 'createdByID',
            'created_by': 'createdBy',
            'credit_hour': 'creditHour',
            'course_time_shift': 'courseTimeShift',
            'course_length_in_weeks': 'courseLengthInWeeks',
            'form_and_evaluation': 'formAndEvaluation',
            'goal_ofcourse': 'goalOfcourse',
            'objectives_of_instruction': 'objectivesOfInstruction',
            'plan_of_instruction': 'planOfInstruction',
            'miscellaneous_note': 'miscellaneousNote',
            'instructions': 'instructions'
        }

        self._id = id
        self._name = name
        self._created_time = created_time
        self._created_by_id = created_by_id
        self._created_by = created_by
        self._credit_hour = credit_hour
        self._course_time_shift = course_time_shift
        self._course_length_in_weeks = course_length_in_weeks
        self._form_and_evaluation = form_and_evaluation
        self._goal_ofcourse = goal_ofcourse
        self._objectives_of_instruction = objectives_of_instruction
        self._plan_of_instruction = plan_of_instruction
        self._miscellaneous_note = miscellaneous_note
        self._instructions = instructions

    @classmethod
    def from_dict(cls, dikt) -> 'Course':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Course of this Course.  # noqa: E501
        :rtype: Course
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Course.

        课程ID  # noqa: E501

        :return: The id of this Course.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Course.

        课程ID  # noqa: E501

        :param id: The id of this Course.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Course.

        课程名称  # noqa: E501

        :return: The name of this Course.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Course.

        课程名称  # noqa: E501

        :param name: The name of this Course.
        :type name: str
        """

        self._name = name

    @property
    def created_time(self) -> str:
        """Gets the created_time of this Course.

        创建时间  # noqa: E501

        :return: The created_time of this Course.
        :rtype: str
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time: str):
        """Sets the created_time of this Course.

        创建时间  # noqa: E501

        :param created_time: The created_time of this Course.
        :type created_time: str
        """

        self._created_time = created_time

    @property
    def created_by_id(self) -> int:
        """Gets the created_by_id of this Course.

        创建人  # noqa: E501

        :return: The created_by_id of this Course.
        :rtype: int
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id: int):
        """Sets the created_by_id of this Course.

        创建人  # noqa: E501

        :param created_by_id: The created_by_id of this Course.
        :type created_by_id: int
        """

        self._created_by_id = created_by_id

    @property
    def created_by(self) -> int:
        """Gets the created_by of this Course.

        创建人  # noqa: E501

        :return: The created_by of this Course.
        :rtype: int
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by: int):
        """Sets the created_by of this Course.

        创建人  # noqa: E501

        :param created_by: The created_by of this Course.
        :type created_by: int
        """

        self._created_by = created_by

    @property
    def credit_hour(self) -> float:
        """Gets the credit_hour of this Course.

        学时设置  # noqa: E501

        :return: The credit_hour of this Course.
        :rtype: float
        """
        return self._credit_hour

    @credit_hour.setter
    def credit_hour(self, credit_hour: float):
        """Sets the credit_hour of this Course.

        学时设置  # noqa: E501

        :param credit_hour: The credit_hour of this Course.
        :type credit_hour: float
        """

        self._credit_hour = credit_hour

    @property
    def course_time_shift(self) -> str:
        """Gets the course_time_shift of this Course.

        上课时间  # noqa: E501

        :return: The course_time_shift of this Course.
        :rtype: str
        """
        return self._course_time_shift

    @course_time_shift.setter
    def course_time_shift(self, course_time_shift: str):
        """Sets the course_time_shift of this Course.

        上课时间  # noqa: E501

        :param course_time_shift: The course_time_shift of this Course.
        :type course_time_shift: str
        """

        self._course_time_shift = course_time_shift

    @property
    def course_length_in_weeks(self) -> int:
        """Gets the course_length_in_weeks of this Course.

        上课周数  # noqa: E501

        :return: The course_length_in_weeks of this Course.
        :rtype: int
        """
        return self._course_length_in_weeks

    @course_length_in_weeks.setter
    def course_length_in_weeks(self, course_length_in_weeks: int):
        """Sets the course_length_in_weeks of this Course.

        上课周数  # noqa: E501

        :param course_length_in_weeks: The course_length_in_weeks of this Course.
        :type course_length_in_weeks: int
        """

        self._course_length_in_weeks = course_length_in_weeks

    @property
    def form_and_evaluation(self) -> str:
        """Gets the form_and_evaluation of this Course.

        课程形式与评价方式  # noqa: E501

        :return: The form_and_evaluation of this Course.
        :rtype: str
        """
        return self._form_and_evaluation

    @form_and_evaluation.setter
    def form_and_evaluation(self, form_and_evaluation: str):
        """Sets the form_and_evaluation of this Course.

        课程形式与评价方式  # noqa: E501

        :param form_and_evaluation: The form_and_evaluation of this Course.
        :type form_and_evaluation: str
        """

        self._form_and_evaluation = form_and_evaluation

    @property
    def goal_ofcourse(self) -> str:
        """Gets the goal_ofcourse of this Course.

        课程目的  # noqa: E501

        :return: The goal_ofcourse of this Course.
        :rtype: str
        """
        return self._goal_ofcourse

    @goal_ofcourse.setter
    def goal_ofcourse(self, goal_ofcourse: str):
        """Sets the goal_ofcourse of this Course.

        课程目的  # noqa: E501

        :param goal_ofcourse: The goal_ofcourse of this Course.
        :type goal_ofcourse: str
        """

        self._goal_ofcourse = goal_ofcourse

    @property
    def objectives_of_instruction(self) -> str:
        """Gets the objectives_of_instruction of this Course.

        教学目标  # noqa: E501

        :return: The objectives_of_instruction of this Course.
        :rtype: str
        """
        return self._objectives_of_instruction

    @objectives_of_instruction.setter
    def objectives_of_instruction(self, objectives_of_instruction: str):
        """Sets the objectives_of_instruction of this Course.

        教学目标  # noqa: E501

        :param objectives_of_instruction: The objectives_of_instruction of this Course.
        :type objectives_of_instruction: str
        """

        self._objectives_of_instruction = objectives_of_instruction

    @property
    def plan_of_instruction(self) -> str:
        """Gets the plan_of_instruction of this Course.

        教学安排  # noqa: E501

        :return: The plan_of_instruction of this Course.
        :rtype: str
        """
        return self._plan_of_instruction

    @plan_of_instruction.setter
    def plan_of_instruction(self, plan_of_instruction: str):
        """Sets the plan_of_instruction of this Course.

        教学安排  # noqa: E501

        :param plan_of_instruction: The plan_of_instruction of this Course.
        :type plan_of_instruction: str
        """

        self._plan_of_instruction = plan_of_instruction

    @property
    def miscellaneous_note(self) -> str:
        """Gets the miscellaneous_note of this Course.

        其他注意事项  # noqa: E501

        :return: The miscellaneous_note of this Course.
        :rtype: str
        """
        return self._miscellaneous_note

    @miscellaneous_note.setter
    def miscellaneous_note(self, miscellaneous_note: str):
        """Sets the miscellaneous_note of this Course.

        其他注意事项  # noqa: E501

        :param miscellaneous_note: The miscellaneous_note of this Course.
        :type miscellaneous_note: str
        """

        self._miscellaneous_note = miscellaneous_note

    @property
    def instructions(self) -> List[CourseInstructions]:
        """Gets the instructions of this Course.

        课程引导内容  # noqa: E501

        :return: The instructions of this Course.
        :rtype: List[CourseInstructions]
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions: List[CourseInstructions]):
        """Sets the instructions of this Course.

        课程引导内容  # noqa: E501

        :param instructions: The instructions of this Course.
        :type instructions: List[CourseInstructions]
        """

        self._instructions = instructions
