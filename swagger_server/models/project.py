# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.project_conclusion_info import ProjectConclusionInfo  # noqa: F401,E501
from swagger_server.models.project_content import ProjectContent  # noqa: F401,E501
from swagger_server.models.project_project_approval_info import ProjectProjectApprovalInfo  # noqa: F401,E501
from swagger_server.models.project_project_meta import ProjectProjectMeta  # noqa: F401,E501
from swagger_server import util


class Project(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, created_time: str=None, created_by_id: int=None, created_by: str=None, related_course_id: int=None, related_course: str=None, project_term: str=None, project_term_length: int=None, project_start_date: str=None, average_intended_credit_hour_per_week: int=None, total_intended_credit_hour: int=None, project_mentor_id: int=None, project_mentor: str=None, average_guiding_hour_per_week: int=None, project_meta: ProjectProjectMeta=None, project_approval_info: ProjectProjectApprovalInfo=None, content: List[ProjectContent]=None, conclusion_info: ProjectConclusionInfo=None, status: str=None):  # noqa: E501
        """Project - a model defined in Swagger

        :param id: The id of this Project.  # noqa: E501
        :type id: int
        :param name: The name of this Project.  # noqa: E501
        :type name: str
        :param created_time: The created_time of this Project.  # noqa: E501
        :type created_time: str
        :param created_by_id: The created_by_id of this Project.  # noqa: E501
        :type created_by_id: int
        :param created_by: The created_by of this Project.  # noqa: E501
        :type created_by: str
        :param related_course_id: The related_course_id of this Project.  # noqa: E501
        :type related_course_id: int
        :param related_course: The related_course of this Project.  # noqa: E501
        :type related_course: str
        :param project_term: The project_term of this Project.  # noqa: E501
        :type project_term: str
        :param project_term_length: The project_term_length of this Project.  # noqa: E501
        :type project_term_length: int
        :param project_start_date: The project_start_date of this Project.  # noqa: E501
        :type project_start_date: str
        :param average_intended_credit_hour_per_week: The average_intended_credit_hour_per_week of this Project.  # noqa: E501
        :type average_intended_credit_hour_per_week: int
        :param total_intended_credit_hour: The total_intended_credit_hour of this Project.  # noqa: E501
        :type total_intended_credit_hour: int
        :param project_mentor_id: The project_mentor_id of this Project.  # noqa: E501
        :type project_mentor_id: int
        :param project_mentor: The project_mentor of this Project.  # noqa: E501
        :type project_mentor: str
        :param average_guiding_hour_per_week: The average_guiding_hour_per_week of this Project.  # noqa: E501
        :type average_guiding_hour_per_week: int
        :param project_meta: The project_meta of this Project.  # noqa: E501
        :type project_meta: ProjectProjectMeta
        :param project_approval_info: The project_approval_info of this Project.  # noqa: E501
        :type project_approval_info: ProjectProjectApprovalInfo
        :param content: The content of this Project.  # noqa: E501
        :type content: List[ProjectContent]
        :param conclusion_info: The conclusion_info of this Project.  # noqa: E501
        :type conclusion_info: ProjectConclusionInfo
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'status': str,
            'created_time': str,
            'created_by_id': int,
            'created_by': str,
            'related_course_id': int,
            'related_course': str,
            'project_term': str,
            'project_term_length': int,
            'project_start_date': str,
            'average_intended_credit_hour_per_week': int,
            'total_intended_credit_hour': int,
            'project_mentor_id': int,
            'project_mentor': str,
            'average_guiding_hour_per_week': int,
            'project_meta': ProjectProjectMeta,
            'project_approval_info': ProjectProjectApprovalInfo,
            'content': List[ProjectContent],
            'conclusion_info': ProjectConclusionInfo
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'status': 'status',
            'created_time': 'createdTime',
            'created_by_id': 'createdByID',
            'created_by': 'createdBy',
            'related_course_id': 'relatedCourseId',
            'related_course': 'relatedCourse',
            'project_term': 'projectTerm',
            'project_term_length': 'projectTermLength',
            'project_start_date': 'projectStartDate',
            'average_intended_credit_hour_per_week': 'averageIntendedCreditHourPerWeek',
            'total_intended_credit_hour': 'totalIntendedCreditHour',
            'project_mentor_id': 'projectMentorID',
            'project_mentor': 'projectMentor',
            'average_guiding_hour_per_week': 'averageGuidingHourPerWeek',
            'project_meta': 'projectMeta',
            'project_approval_info': 'projectApprovalInfo',
            'content': 'content',
            'conclusion_info': 'conclusionInfo'
        }

        self._id = id
        self._name = name
        self._status = status
        self._created_time = created_time
        self._created_by_id = created_by_id
        self._created_by = created_by
        self._related_course_id = related_course_id
        self._related_course = related_course
        self._project_term = project_term
        self._project_term_length = project_term_length
        self._project_start_date = project_start_date
        self._average_intended_credit_hour_per_week = average_intended_credit_hour_per_week
        self._total_intended_credit_hour = total_intended_credit_hour
        self._project_mentor_id = project_mentor_id
        self._project_mentor = project_mentor
        self._average_guiding_hour_per_week = average_guiding_hour_per_week
        self._project_meta = project_meta
        self._project_approval_info = project_approval_info
        self._content = content
        self._conclusion_info = conclusion_info

    @classmethod
    def from_dict(cls, dikt) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Project of this Project.  # noqa: E501
        :rtype: Project
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Project.

        项目ID  # noqa: E501

        :return: The id of this Project.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Project.

        项目ID  # noqa: E501

        :param id: The id of this Project.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Project.

        项目名称  # noqa: E501

        :return: The name of this Project.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Project.

        项目名称  # noqa: E501

        :param name: The name of this Project.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name
    
    @property
    def status(self) -> str:
        """Gets the name of this Project.

        项目名称  # noqa: E501

        :return: The name of this Project.
        :rtype: str
        """
        return self._status

    @name.setter
    def name(self, status: str):
        """Sets the name of this Project.

        项目名称  # noqa: E501

        :param name: The name of this Project.
        :type name: str
        """
        if status is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def created_time(self) -> str:
        """Gets the created_time of this Project.

        创建时间  # noqa: E501

        :return: The created_time of this Project.
        :rtype: str
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time: str):
        """Sets the created_time of this Project.

        创建时间  # noqa: E501

        :param created_time: The created_time of this Project.
        :type created_time: str
        """
        if created_time is None:
            raise ValueError("Invalid value for `created_time`, must not be `None`")  # noqa: E501

        self._created_time = created_time

    @property
    def created_by_id(self) -> int:
        """Gets the created_by_id of this Project.

        创建人ID  # noqa: E501

        :return: The created_by_id of this Project.
        :rtype: int
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id: int):
        """Sets the created_by_id of this Project.

        创建人ID  # noqa: E501

        :param created_by_id: The created_by_id of this Project.
        :type created_by_id: int
        """

        self._created_by_id = created_by_id

    @property
    def created_by(self) -> str:
        """Gets the created_by of this Project.

        创建人（姓名）  # noqa: E501

        :return: The created_by of this Project.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by: str):
        """Sets the created_by of this Project.

        创建人（姓名）  # noqa: E501

        :param created_by: The created_by of this Project.
        :type created_by: str
        """
        if created_by is None:
            raise ValueError("Invalid value for `created_by`, must not be `None`")  # noqa: E501

        self._created_by = created_by

    @property
    def related_course_id(self) -> int:
        """Gets the related_course_id of this Project.

        关联的课程ID；自由项目的课程ID为0  # noqa: E501

        :return: The related_course_id of this Project.
        :rtype: int
        """
        return self._related_course_id

    @related_course_id.setter
    def related_course_id(self, related_course_id: int):
        """Sets the related_course_id of this Project.

        关联的课程ID；自由项目的课程ID为0  # noqa: E501

        :param related_course_id: The related_course_id of this Project.
        :type related_course_id: int
        """
        if related_course_id is None:
            raise ValueError("Invalid value for `related_course_id`, must not be `None`")  # noqa: E501

        self._related_course_id = related_course_id

    @property
    def related_course(self) -> str:
        """Gets the related_course of this Project.

        关联的课程  # noqa: E501

        :return: The related_course of this Project.
        :rtype: str
        """
        return self._related_course

    @related_course.setter
    def related_course(self, related_course: str):
        """Sets the related_course of this Project.

        关联的课程  # noqa: E501

        :param related_course: The related_course of this Project.
        :type related_course: str
        """

        self._related_course = related_course

    @property
    def project_term(self) -> str:
        """Gets the project_term of this Project.

        项目开始学期  # noqa: E501

        :return: The project_term of this Project.
        :rtype: str
        """
        return self._project_term

    @project_term.setter
    def project_term(self, project_term: str):
        """Sets the project_term of this Project.

        项目开始学期  # noqa: E501

        :param project_term: The project_term of this Project.
        :type project_term: str
        """

        self._project_term = project_term

    @property
    def project_term_length(self) -> int:
        """Gets the project_term_length of this Project.

        持续时间（以学期为单位）  # noqa: E501

        :return: The project_term_length of this Project.
        :rtype: int
        """
        return self._project_term_length

    @project_term_length.setter
    def project_term_length(self, project_term_length: int):
        """Sets the project_term_length of this Project.

        持续时间（以学期为单位）  # noqa: E501

        :param project_term_length: The project_term_length of this Project.
        :type project_term_length: int
        """

        self._project_term_length = project_term_length

    @property
    def project_start_date(self) -> str:
        """Gets the project_start_date of this Project.

        项目开始时间  # noqa: E501

        :return: The project_start_date of this Project.
        :rtype: str
        """
        return self._project_start_date

    @project_start_date.setter
    def project_start_date(self, project_start_date: str):
        """Sets the project_start_date of this Project.

        项目开始时间  # noqa: E501

        :param project_start_date: The project_start_date of this Project.
        :type project_start_date: str
        """

        self._project_start_date = project_start_date

    @property
    def average_intended_credit_hour_per_week(self) -> int:
        """Gets the average_intended_credit_hour_per_week of this Project.

        预期周均学时  # noqa: E501

        :return: The average_intended_credit_hour_per_week of this Project.
        :rtype: int
        """
        return self._average_intended_credit_hour_per_week

    @average_intended_credit_hour_per_week.setter
    def average_intended_credit_hour_per_week(self, average_intended_credit_hour_per_week: int):
        """Sets the average_intended_credit_hour_per_week of this Project.

        预期周均学时  # noqa: E501

        :param average_intended_credit_hour_per_week: The average_intended_credit_hour_per_week of this Project.
        :type average_intended_credit_hour_per_week: int
        """

        self._average_intended_credit_hour_per_week = average_intended_credit_hour_per_week

    @property
    def total_intended_credit_hour(self) -> int:
        """Gets the total_intended_credit_hour of this Project.

        预期总学时  # noqa: E501

        :return: The total_intended_credit_hour of this Project.
        :rtype: int
        """
        return self._total_intended_credit_hour

    @total_intended_credit_hour.setter
    def total_intended_credit_hour(self, total_intended_credit_hour: int):
        """Sets the total_intended_credit_hour of this Project.

        预期总学时  # noqa: E501

        :param total_intended_credit_hour: The total_intended_credit_hour of this Project.
        :type total_intended_credit_hour: int
        """

        self._total_intended_credit_hour = total_intended_credit_hour

    @property
    def project_mentor_id(self) -> int:
        """Gets the project_mentor_id of this Project.

        项目导师ID  # noqa: E501

        :return: The project_mentor_id of this Project.
        :rtype: int
        """
        return self._project_mentor_id

    @project_mentor_id.setter
    def project_mentor_id(self, project_mentor_id: int):
        """Sets the project_mentor_id of this Project.

        项目导师ID  # noqa: E501

        :param project_mentor_id: The project_mentor_id of this Project.
        :type project_mentor_id: int
        """

        self._project_mentor_id = project_mentor_id

    @property
    def project_mentor(self) -> str:
        """Gets the project_mentor of this Project.

        项目导师  # noqa: E501

        :return: The project_mentor of this Project.
        :rtype: str
        """
        return self._project_mentor

    @project_mentor.setter
    def project_mentor(self, project_mentor: str):
        """Sets the project_mentor of this Project.

        项目导师  # noqa: E501

        :param project_mentor: The project_mentor of this Project.
        :type project_mentor: str
        """

        self._project_mentor = project_mentor

    @property
    def average_guiding_hour_per_week(self) -> int:
        """Gets the average_guiding_hour_per_week of this Project.

        导师周均指导时间  # noqa: E501

        :return: The average_guiding_hour_per_week of this Project.
        :rtype: int
        """
        return self._average_guiding_hour_per_week

    @average_guiding_hour_per_week.setter
    def average_guiding_hour_per_week(self, average_guiding_hour_per_week: int):
        """Sets the average_guiding_hour_per_week of this Project.

        导师周均指导时间  # noqa: E501

        :param average_guiding_hour_per_week: The average_guiding_hour_per_week of this Project.
        :type average_guiding_hour_per_week: int
        """

        self._average_guiding_hour_per_week = average_guiding_hour_per_week

    @property
    def project_meta(self) -> ProjectProjectMeta:
        """Gets the project_meta of this Project.


        :return: The project_meta of this Project.
        :rtype: ProjectProjectMeta
        """
        return self._project_meta

    @project_meta.setter
    def project_meta(self, project_meta: ProjectProjectMeta):
        """Sets the project_meta of this Project.


        :param project_meta: The project_meta of this Project.
        :type project_meta: ProjectProjectMeta
        """

        self._project_meta = project_meta

    @property
    def project_approval_info(self) -> ProjectProjectApprovalInfo:
        """Gets the project_approval_info of this Project.


        :return: The project_approval_info of this Project.
        :rtype: ProjectProjectApprovalInfo
        """
        return self._project_approval_info

    @project_approval_info.setter
    def project_approval_info(self, project_approval_info: ProjectProjectApprovalInfo):
        """Sets the project_approval_info of this Project.


        :param project_approval_info: The project_approval_info of this Project.
        :type project_approval_info: ProjectProjectApprovalInfo
        """

        self._project_approval_info = project_approval_info

    @property
    def content(self) -> List[ProjectContent]:
        """Gets the content of this Project.

        项目记录的条目  # noqa: E501

        :return: The content of this Project.
        :rtype: List[ProjectContent]
        """
        return self._content

    @content.setter
    def content(self, content: List[ProjectContent]):
        """Sets the content of this Project.

        项目记录的条目  # noqa: E501

        :param content: The content of this Project.
        :type content: List[ProjectContent]
        """

        self._content = content

    @property
    def conclusion_info(self) -> ProjectConclusionInfo:
        """Gets the conclusion_info of this Project.


        :return: The conclusion_info of this Project.
        :rtype: ProjectConclusionInfo
        """
        return self._conclusion_info

    @conclusion_info.setter
    def conclusion_info(self, conclusion_info: ProjectConclusionInfo):
        """Sets the conclusion_info of this Project.


        :param conclusion_info: The conclusion_info of this Project.
        :type conclusion_info: ProjectConclusionInfo
        """

        self._conclusion_info = conclusion_info
