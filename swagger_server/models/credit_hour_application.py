# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CreditHourApplication(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, value: float=None, applicant_id: int=None, applicaiton_description: str=None, status: str=None, entry_id: List[int]=None):  # noqa: E501
        """CreditHourApplication - a model defined in Swagger

        :param value: The value of this CreditHourApplication.  # noqa: E501
        :type value: float
        :param applicant_id: The applicant_id of this CreditHourApplication.  # noqa: E501
        :type applicant_id: int
        :param applicaiton_description: The applicaiton_description of this CreditHourApplication.  # noqa: E501
        :type applicaiton_description: str
        :param status: The status of this CreditHourApplication.  # noqa: E501
        :type status: str
        :param entry_id: The entry_id of this CreditHourApplication.  # noqa: E501
        :type entry_id: List[int]
        """
        self.swagger_types = {
            'value': float,
            'applicant_id': int,
            'applicaiton_description': str,
            'status': str,
            'entry_id': List[int]
        }

        self.attribute_map = {
            'value': 'value',
            'applicant_id': 'applicantId',
            'applicaiton_description': 'applicaitonDescription',
            'status': 'status',
            'entry_id': 'entryId'
        }

        self._value = value
        self._applicant_id = applicant_id
        self._applicaiton_description = applicaiton_description
        self._status = status
        self._entry_id = entry_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreditHourApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreditHourApplication of this CreditHourApplication.  # noqa: E501
        :rtype: CreditHourApplication
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self) -> float:
        """Gets the value of this CreditHourApplication.

        所申请的学时值（按分钟记）  # noqa: E501

        :return: The value of this CreditHourApplication.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this CreditHourApplication.

        所申请的学时值（按分钟记）  # noqa: E501

        :param value: The value of this CreditHourApplication.
        :type value: float
        """

        self._value = value

    @property
    def applicant_id(self) -> int:
        """Gets the applicant_id of this CreditHourApplication.

        申请人ID  # noqa: E501

        :return: The applicant_id of this CreditHourApplication.
        :rtype: int
        """
        return self._applicant_id

    @applicant_id.setter
    def applicant_id(self, applicant_id: int):
        """Sets the applicant_id of this CreditHourApplication.

        申请人ID  # noqa: E501

        :param applicant_id: The applicant_id of this CreditHourApplication.
        :type applicant_id: int
        """

        self._applicant_id = applicant_id

    @property
    def applicaiton_description(self) -> str:
        """Gets the applicaiton_description of this CreditHourApplication.

        申请内容详述  # noqa: E501

        :return: The applicaiton_description of this CreditHourApplication.
        :rtype: str
        """
        return self._applicaiton_description

    @applicaiton_description.setter
    def applicaiton_description(self, applicaiton_description: str):
        """Sets the applicaiton_description of this CreditHourApplication.

        申请内容详述  # noqa: E501

        :param applicaiton_description: The applicaiton_description of this CreditHourApplication.
        :type applicaiton_description: str
        """

        self._applicaiton_description = applicaiton_description

    @property
    def status(self) -> str:
        """Gets the status of this CreditHourApplication.

        申请结果状态  # noqa: E501

        :return: The status of this CreditHourApplication.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this CreditHourApplication.

        申请结果状态  # noqa: E501

        :param status: The status of this CreditHourApplication.
        :type status: str
        """

        self._status = status

    @property
    def entry_id(self) -> List[int]:
        """Gets the entry_id of this CreditHourApplication.

        关联的学时授予记录（在审核批准前为0）  # noqa: E501

        :return: The entry_id of this CreditHourApplication.
        :rtype: List[int]
        """
        return self._entry_id

    @entry_id.setter
    def entry_id(self, entry_id: List[int]):
        """Sets the entry_id of this CreditHourApplication.

        关联的学时授予记录（在审核批准前为0）  # noqa: E501

        :param entry_id: The entry_id of this CreditHourApplication.
        :type entry_id: List[int]
        """

        self._entry_id = entry_id
