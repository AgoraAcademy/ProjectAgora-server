# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LearnerCustodianInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, relationship: str=None):  # noqa: E501
        """LearnerCustodianInfo - a model defined in Swagger

        :param name: The name of this LearnerCustodianInfo.  # noqa: E501
        :type name: str
        :param relationship: The relationship of this LearnerCustodianInfo.  # noqa: E501
        :type relationship: str
        """
        self.swagger_types = {
            'name': str,
            'relationship': str
        }

        self.attribute_map = {
            'name': 'name',
            'relationship': 'relationship'
        }

        self._name = name
        self._relationship = relationship

    @classmethod
    def from_dict(cls, dikt) -> 'LearnerCustodianInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Learner_custodianInfo of this LearnerCustodianInfo.  # noqa: E501
        :rtype: LearnerCustodianInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this LearnerCustodianInfo.

        姓名  # noqa: E501

        :return: The name of this LearnerCustodianInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this LearnerCustodianInfo.

        姓名  # noqa: E501

        :param name: The name of this LearnerCustodianInfo.
        :type name: str
        """

        self._name = name

    @property
    def relationship(self) -> str:
        """Gets the relationship of this LearnerCustodianInfo.

        关系  # noqa: E501

        :return: The relationship of this LearnerCustodianInfo.
        :rtype: str
        """
        return self._relationship

    @relationship.setter
    def relationship(self, relationship: str):
        """Sets the relationship of this LearnerCustodianInfo.

        关系  # noqa: E501

        :param relationship: The relationship of this LearnerCustodianInfo.
        :type relationship: str
        """

        self._relationship = relationship
